###
 # @file
 #
 # @brief Makefile for tests.
 #
 # @version 1.0
 # @author  Wei Tang <gauchyler@uestc.edu.cn>
 # @date    2018-09-30
 #
 # @copyright Copyright (c) 2018.
 #   National Key Laboratory of Science and Technology on Communications,
 #   University of Electronic Science and Technology of China.
 #   All rights reserved.
 ##

NSFX_PATH=..
INCLUDES=/I"$(NSFX_PATH)/.."
LIBS=

################################################################################
# Common section. {{{
# Updated: 2020-03-12
################################################################################
CC=cl.exe
LD=link.exe
AR=lib.exe

CFLAGS=/nologo /W3 $(INCLUDES)
CPPFLAGS=/EHsc
LDFLAGS=/NOLOGO /INCREMENTAL:NO
ARFLAGS=/NOLOGO

# Check VC version.
!IF [echo MSC_VER=_MSC_VER> mscver.c && $(CC) /EP mscver.c > mscver.~ 2>nul]
! IF [del mscver.c mscver.~ 2>nul]
! ENDIF
! MESSAGE *** ERROR ***
! MESSAGE Cannot run Visual C to determine its version. Make sure $(CC) is in PATH.
! ERROR Make aborted.
!ELSE
! INCLUDE mscver.~
! IF [del mscver.c mscver.~]
! ENDIF
!ENDIF

!IF [echo MSC_FULL_VER=_MSC_FULL_VER> mscfullver.c && $(CC) /EP mscfullver.c > mscfullver.~ 2>nul]
! IF [del mscfullver.c mscfullver.~ 2>nul]
! ENDIF
! MESSAGE *** ERROR ***
! MESSAGE Cannot run Visual C to determine its version. Make sure $(CC) is in PATH.
! ERROR Make aborted.
!ELSE
! INCLUDE mscfullver.~
! IF [del mscfullver.c mscfullver.~]
! ENDIF
!ENDIF

!IF [for /f "skip=1 tokens=1-3 delims=." %i in ('wmic os get version') do @(echo.OS_MAJOR_VER=%i>osver.~ & echo.OS_MINOR_VER=%j>>osver.~ & echo.OS_BUILD_NUMBER=%k>>osver.~ & echo.OS_FULL_VER=%i%j%k>>osver.~ & exit /b)]
! MESSAGE *** WARNING ***
! MESSAGE Cannot determine OS version, defaults to Microsft Windows XP SP3.
OS_MAJOR_VER=5
OS_MINOR_VER=1
OS_BUILD_NUMBER=2600
OS_FULL_VER=5012600
!ELSE
! INCLUDE osver.~
! IF [del osver.~]
! ENDIF
!ENDIF

# VC 2010 or above is required.
!IF $(MSC_VER) < 1600
! MESSAGE *** ERROR ***
! MESSAGE Unsupported VC version. Make sure VC 2010 or above versions are used.
! ERROR Make aborted.
!ENDIF

## `/utf-8`
# * `utf-8`: From VC 2012.
# * `/wd4819`: Disable warning C4819: file contains non-ascii characters.
!IF $(MSC_VER) >= 1700
CFLAGS=$(CFLAGS) /utf-8
!ELSE # IF $(MSC_VER) < 1700
CFLAGS=$(CFLAGS) /wd4819
!ENDIF

## `/std:c++14|c++17|c++latest`
# * `c++14`: From VC 2015 Update 3
# * `c++17`: From VC 2017 15.3
!IF $(MSC_VER) >= 1911
CPPFLAGS=$(CPPFLAGS) /std:c++17
!ELSEIF $(MSC_FULL_VER) >= 190024210
CPPFLAGS=$(CPPFLAGS) /std:c++14
!ENDIF

## `/Zm<n% of default>`
# * VC 2010 does not support variadic template.
#   Thus, variadic template is emulated by an extensive amount of non-variadic
#   templates, and a larger amount of memory is required.
!IF $(MSC_VER) <= 1600
CPPFLAGS=$(CPPFLAGS) /Zm250
!ENDIF

## `/analyze`
# * From VC 2012.
# !IF $(MSC_VER) >= 1700
# CFLAGS=$(CFLAGS) /analyze
# !ENDIF

## `/arch:<SSE2|AVX|AVX2>`
# * `AVX` From Windows 7 SP1 and Windows Server 2008 R2 SP1 (6.1.7601)
# * `AVX`: From VC 2010
# * `AVX2`: From VC 2013 Update 2
!IF $(OS_FULL_VER) < 617601
ARCH=SSE2
!ELSE
! IF $(MSC_FULL_VER) >= 180030501
ARCH=AVX2
! ElSE
ARCH=AVX
! ENDIF
!ENDIF

!IF "$(BUILD_TYPE)"=="Release"
CFLAGS=$(CFLAGS) /MD /Ox /arch:$(ARCH)
CPPFLAGS=$(CPPFLAGS) /DBOOST_DISABLE_ASSERTS
!ELSEIF "$(BUILD_TYPE)"=="RelWithDebInfo"
CFLAGS=$(CFLAGS) /MD /Zi /Ox /arch:$(ARCH)
CPPFLAGS=$(CPPFLAGS) /DBOOST_DISABLE_ASSERTS
LDFLAGS=$(LDFLAGS) /DEBUG
!ELSE
CFLAGS=$(CFLAGS) /MDd /Zi /Od
LDFLAGS=$(LDFLAGS) /DEBUG
!ENDIF

# Clean all output files.
clean :
	del /s /q *.pch 1>nul 2>nul
	del /s /q *.obj 1>nul 2>nul
	del /s /q *.pdb 1>nul 2>nul
	del /s /q *.ilk 1>nul 2>nul
	del /s /q *.exp 1>nul 2>nul
	del /s /q *.lib 1>nul 2>nul
	del /s /q *.dll 1>nul 2>nul
	del /s /q *.exe 1>nul 2>nul
	del /s /q *.log 1>nul 2>nul

# Ignore command errors (e.g., 'dir' found nothing) by adding switch "+I".
!CMDSWITCHES +I
# Run all executables.
run :
	for /f "delims=" %d in ('dir /b *.exe 2^>nul') do @( \
		echo ====== %~d ====== & \
		"%~d" )

# Clean all except for the pre-compiled header.
PCH=config.pch
PCHOBJ=config.obj
cl :
	for /f "delims=" %d in ('dir /s /b *.obj 2^>nul') do @( \
		if "%~nxd" neq "$(PCHOBJ)" del "%~d" 1>nul 2>nul )
	for /f "delims=" %d in ('dir /s /b *.pdb 2^>nul') do @( \
		echo %~nd| findstr "^vc[0-9][0-9][0-9]$$" >nul ||   \
		del "%~d" 1>nul 2>nul )
	del /s /q *.ilk 1>nul 2>nul
	del /s /q *.exp 1>nul 2>nul
	del /s /q *.lib 1>nul 2>nul
	del /s /q *.dll 1>nul 2>nul
	del /s /q *.exe 1>nul 2>nul
	del /s /q *.log 1>nul 2>nul
!CMDSWITCHES -I

################################################################################
# }}}
################################################################################

.PHONY: all clean run                                             \
        test utility chrono component event log random statistics \
        simulation network                                        \

all : test utility chrono                   \
      component event log random statistics \
      simulation network                    \

################################################################################
EXCEPTION_HEADERS=                     \
    $(NSFX_PATH)/config.h              \
    $(NSFX_PATH)/exception/exception.h \

################################################################################
# test
test :         \
    test-case  \
    test-suite \

TEST_HEADERS=                           \
    $(NSFX_PATH)/test.h                 \
    $(NSFX_PATH)/test/config.h          \
    $(NSFX_PATH)/test/visitor-concept.h \
    $(NSFX_PATH)/test/tool-type.h       \
    $(NSFX_PATH)/test/tool-level.h      \
    $(NSFX_PATH)/test/result.h          \
    $(NSFX_PATH)/test/case.h            \
    $(NSFX_PATH)/test/suite.h           \
    $(NSFX_PATH)/test/logger.h          \
    $(NSFX_PATH)/test/runner.h          \
    $(NSFX_PATH)/test/builder.h         \
    $(NSFX_PATH)/test/tool-iterate.h    \
    $(NSFX_PATH)/test/tool.h            \

HEADERS=                 \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-case : test-case.exe

SRC=test/test-case.cpp

test-case.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-suite : test-suite.exe

SRC=test/test-suite.cpp

test-suite.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# utility
utility :                         \
	test-nop                      \
    test-circular-sequence-number \
    test-lollipop-sequence-number \
    test-bi-array                 \
    test-bi-matrix                \
    test-bi-vector                \
	test-lexical-compare          \

UTILITY_HEADERS=                                    \
    $(NSFX_PATH)/utility.h                          \
    $(NSFX_PATH)/utility/config.h                   \
    $(NSFX_PATH)/utility/nop.h                      \
    $(NSFX_PATH)/utility/ratio.h                    \
    $(NSFX_PATH)/utility/endian.h                   \
    $(NSFX_PATH)/utility/rounding.h                 \
    $(NSFX_PATH)/utility/circular-sequence-number.h \
    $(NSFX_PATH)/utility/lollipop-sequence-number.h \
    $(NSFX_PATH)/utility/bi-array.h                 \
    $(NSFX_PATH)/utility/bi-matrix.h                \
    $(NSFX_PATH)/utility/bi-vector.h                \
    $(NSFX_PATH)/utility/lexical-compare.h          \

HEADERS=                 \
    $(UTILITY_HEADERS)   \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-nop : test-nop.exe

SRC=utility/test-nop.cpp

test-nop.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-circular-sequence-number : test-circular-sequence-number.exe

SRC=utility/test-circular-sequence-number.cpp

test-circular-sequence-number.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-lollipop-sequence-number : test-lollipop-sequence-number.exe

SRC=utility/test-lollipop-sequence-number.cpp

test-lollipop-sequence-number.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-bi-array : test-bi-array.exe

SRC=utility/test-bi-array.cpp

test-bi-array.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-bi-matrix : test-bi-matrix.exe

SRC=utility/test-bi-matrix.cpp

test-bi-matrix.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-bi-vector : test-bi-vector.exe

SRC=utility/test-bi-vector.cpp

test-bi-vector.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-lexical-compare : test-lexical-compare.exe

SRC=utility/test-lexical-compare.cpp

test-lexical-compare.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# chrono
chrono :                    \
    test-duration           \
    test-virtual-time-point \

CHRONO_HEADERS=                              \
    $(NSFX_PATH)/config.h                    \
    $(NSFX_PATH)/chrono/config.h             \
    $(NSFX_PATH)/chrono/duration.h           \
    $(NSFX_PATH)/chrono/time-point.h         \
    $(NSFX_PATH)/chrono/virtual-time-point.h \
    $(UTILITY_HEADERS)                       \

HEADERS=                 \
    $(CHRONO_HEADERS)    \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-duration : test-duration.exe

SRC=chrono/test-duration.cpp

test-duration.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-virtual-time-point : test-virtual-time-point.exe

SRC=chrono/test-virtual-time-point.cpp

test-virtual-time-point.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# component
component :             \
    test-uid            \
    test-ptr            \
    test-object         \
    test-class-factory  \
    test-class-registry \

COMPONENT_HEADERS=                            \
    $(NSFX_PATH)/component.h                  \
    $(NSFX_PATH)/component/config.h           \
    $(NSFX_PATH)/component/exception.h        \
    $(NSFX_PATH)/component/uid.h              \
    $(NSFX_PATH)/component/i-object.h         \
    $(NSFX_PATH)/component/object.h           \
    $(NSFX_PATH)/component/ptr.h              \
    $(NSFX_PATH)/component/i-user.h           \
    $(NSFX_PATH)/component/i-class-factory.h  \
    $(NSFX_PATH)/component/class-factory.h    \
    $(NSFX_PATH)/component/i-class-registry.h \
    $(NSFX_PATH)/component/class-registry.h   \

HEADERS=                 \
    $(COMPONENT_HEADERS) \
    $(CHRONO_HEADERS)    \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-uid : test-uid.exe

SRC=component/test-uid.cpp

test-uid.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-ptr : test-ptr.exe

SRC=component/test-ptr.cpp

test-ptr.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-object : test-object.exe

SRC=component/test-object.cpp

test-object.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-class-factory : test-class-factory.exe

SRC=component/test-class-factory.cpp

test-class-factory.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-class-registry : test-class-registry.exe

SRC=component/test-class-registry.cpp

test-class-registry.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# event
event :             \
    test-event-sink \
    test-event      \
    test-portainer  \

EVENT_HEADERS=                        \
    $(NSFX_PATH)/event.h              \
    $(NSFX_PATH)/event/config.h       \
    $(NSFX_PATH)/event/exception.h    \
    $(NSFX_PATH)/event/i-event-sink.h \
    $(NSFX_PATH)/event/event-sink.h   \
    $(NSFX_PATH)/event/i-event.h      \
    $(NSFX_PATH)/event/event.h        \
    $(NSFX_PATH)/event/portainer.h    \

HEADERS=                 \
    $(EVENT_HEADERS)     \
    $(COMPONENT_HEADERS) \
    $(CHRONO_HEADERS)    \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-event : test-event.exe

SRC=event/test-event.cpp

test-event.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-event-sink : test-event-sink.exe

SRC=event/test-event-sink.cpp

test-event-sink.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-portainer : test-portainer.exe

SRC=event/test-portainer.cpp

test-portainer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# log
log :                    \
	test-log-value       \
	test-log-record      \
    test-log-filter      \
    test-logger          \
    test-log-formatter   \
    test-log-stream-sink \

LOG_HEADERS=                                \
    $(NSFX_PATH)/log.h                      \
    $(NSFX_PATH)/log/config.h               \
    $(NSFX_PATH)/log/exception.h            \
    $(NSFX_PATH)/log/log-value.h            \
    $(NSFX_PATH)/log/make-log-value.h       \
    $(NSFX_PATH)/log/log-value-traits.h     \
    $(NSFX_PATH)/log/std-log-value-traits.h \
    $(NSFX_PATH)/log/log-record.h           \
    $(NSFX_PATH)/log/i-log.h                \
    $(NSFX_PATH)/log/log-severity.h         \
    $(NSFX_PATH)/log/log-tool.h             \
    $(NSFX_PATH)/log/i-log-filter.h         \
    $(NSFX_PATH)/log/create-log-filter.h    \
    $(NSFX_PATH)/log/logger.h               \
    $(NSFX_PATH)/log/i-log-formatter.h      \
    $(NSFX_PATH)/log/create-log-formatter.h \
    $(NSFX_PATH)/log/i-log-stream-sink.h    \
    $(NSFX_PATH)/log/log-stream-sink.h      \

HEADERS=                 \
    $(LOG_HEADERS)       \
    $(EVENT_HEADERS)     \
    $(COMPONENT_HEADERS) \
    $(CHRONO_HEADERS)    \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-log-value : test-log-value.exe

SRC=log/test-log-value.cpp

test-log-value.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-log-record : test-log-record.exe

SRC=log/test-log-record.cpp

test-log-record.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-log-filter : test-log-filter.exe

SRC=log/test-log-filter.cpp

test-log-filter.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-logger : test-logger.exe

SRC=log/test-logger.cpp

test-logger.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-log-formatter : test-log-formatter.exe

SRC=log/test-log-formatter.cpp

test-log-formatter.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-log-stream-sink : test-log-stream-sink.exe

SRC=log/test-log-stream-sink.cpp

test-log-stream-sink.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# random
random :                         \
    test-rot                     \
    test-splitmix-engine         \
    test-xoshiro-engine          \
    test-xoroshiro-engine        \
    test-pseudo-random-generator \

RANDOM_HEADERS=                                                            \
    $(NSFX_PATH)/random.h                                                  \
    $(NSFX_PATH)/random/config.h                                           \
    $(NSFX_PATH)/random/detail/rot.h                                       \
    $(NSFX_PATH)/random/detail/is-power-2.h                                \
    $(NSFX_PATH)/random/distribution/i-uniform-uint32-distribution.h       \
    $(NSFX_PATH)/random/distribution/i-uniform-int32-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-uniform-uint64-distribution.h       \
    $(NSFX_PATH)/random/distribution/i-uniform-int64-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-uniform-double-distribution.h       \
    $(NSFX_PATH)/random/distribution/i-uniform-float-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-bernoulli-distribution.h            \
    $(NSFX_PATH)/random/distribution/i-binomial-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-geometric-distribution.h            \
    $(NSFX_PATH)/random/distribution/i-negative-binomial-distribution.h    \
    $(NSFX_PATH)/random/distribution/i-poisson-distribution.h              \
    $(NSFX_PATH)/random/distribution/i-exponential-distribution.h          \
    $(NSFX_PATH)/random/distribution/i-gamma-distribution.h                \
    $(NSFX_PATH)/random/distribution/i-weibull-distribution.h              \
    $(NSFX_PATH)/random/distribution/i-extreme-value-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-beta-distribution.h                 \
    $(NSFX_PATH)/random/distribution/i-laplace-distribution.h              \
    $(NSFX_PATH)/random/distribution/i-normal-distribution.h               \
    $(NSFX_PATH)/random/distribution/i-lognormal-distribution.h            \
    $(NSFX_PATH)/random/distribution/i-chi-squared-distribution.h          \
    $(NSFX_PATH)/random/distribution/i-cauchy-distribution.h               \
    $(NSFX_PATH)/random/distribution/i-fisher-f-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-student-t-distribution.h            \
    $(NSFX_PATH)/random/distribution/i-discrete-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-piecewise-constant-distribution.h   \
    $(NSFX_PATH)/random/distribution/i-piecewise-linear-distribution.h     \
    $(NSFX_PATH)/random/distribution/i-triangle-distribution.h             \
    $(NSFX_PATH)/random/distribution/std-uniform-uint32-distribution.h     \
    $(NSFX_PATH)/random/distribution/std-uniform-int32-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-uniform-uint64-distribution.h     \
    $(NSFX_PATH)/random/distribution/std-uniform-int64-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-uniform-double-distribution.h     \
    $(NSFX_PATH)/random/distribution/std-uniform-float-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-bernoulli-distribution.h          \
    $(NSFX_PATH)/random/distribution/std-binomial-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-geometric-distribution.h          \
    $(NSFX_PATH)/random/distribution/std-negative-binomial-distribution.h  \
    $(NSFX_PATH)/random/distribution/std-poisson-distribution.h            \
    $(NSFX_PATH)/random/distribution/std-exponential-distribution.h        \
    $(NSFX_PATH)/random/distribution/std-gamma-distribution.h              \
    $(NSFX_PATH)/random/distribution/std-weibull-distribution.h            \
    $(NSFX_PATH)/random/distribution/std-extreme-value-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-beta-distribution.h               \
    $(NSFX_PATH)/random/distribution/std-laplace-distribution.h            \
    $(NSFX_PATH)/random/distribution/std-normal-distribution.h             \
    $(NSFX_PATH)/random/distribution/std-lognormal-distribution.h          \
    $(NSFX_PATH)/random/distribution/std-chi-squared-distribution.h        \
    $(NSFX_PATH)/random/distribution/std-cauchy-distribution.h             \
    $(NSFX_PATH)/random/distribution/std-fisher-f-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-student-t-distribution.h          \
    $(NSFX_PATH)/random/distribution/std-discrete-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-piecewise-constant-distribution.h \
    $(NSFX_PATH)/random/distribution/std-piecewise-linear-distribution.h   \
    $(NSFX_PATH)/random/distribution/std-triangle-distribution.h           \
    $(NSFX_PATH)/random/engine/splitmix-engine.h                           \
    $(NSFX_PATH)/random/engine/xoroshiro-engine.h                          \
    $(NSFX_PATH)/random/engine/xoshiro-engine.h                            \
    $(NSFX_PATH)/random/i-random.h                                         \
    $(NSFX_PATH)/random/i-random-uint32-generator.h                        \
    $(NSFX_PATH)/random/i-random-uint64-generator.h                        \
    $(NSFX_PATH)/random/i-random-double-generator.h                        \
    $(NSFX_PATH)/random/i-pseudo-random-engine.h                           \
    $(NSFX_PATH)/random/pseudo-random-generator.h                          \

HEADERS=                 \
    $(RANDOM_HEADERS)    \
    $(COMPONENT_HEADERS) \
    $(TEST_HEADERS)      \
    $(EXCEPTION_HEADERS) \

########################################
test-rot : test-rot.exe

SRC=random/test-rot.cpp

test-rot.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-splitmix-engine : test-splitmix-engine.exe

SRC=random/test-splitmix-engine.cpp

test-splitmix-engine.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-xoshiro-engine : test-xoshiro-engine.exe

SRC=random/test-xoshiro-engine.cpp

test-xoshiro-engine.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-xoroshiro-engine : test-xoroshiro-engine.exe

SRC=random/test-xoroshiro-engine.cpp

test-xoroshiro-engine.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-pseudo-random-generator : test-pseudo-random-generator.exe

SRC=random/test-pseudo-random-generator.cpp

test-pseudo-random-generator.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# statistics
statistics :        \
    test-statistics \
    test-probe      \
    test-summary    \

STATISTICS_HEADERS=                                    \
    $(NSFX_PATH)/statistics.h                          \
    $(NSFX_PATH)/statistics/config.h                   \
    $(NSFX_PATH)/statistics/exception.h                \
    $(NSFX_PATH)/statistics/i-statistic.h              \
    $(NSFX_PATH)/statistics/i-statistics-container.h   \
    $(NSFX_PATH)/statistics/i-statistics-enumerator.h  \
    $(NSFX_PATH)/statistics/statistic.h                \
    $(NSFX_PATH)/statistics/statistics-container.h     \
    $(NSFX_PATH)/statistics/statistics-enumerator.h    \
    $(NSFX_PATH)/statistics/probe/i-probe-event.h      \
    $(NSFX_PATH)/statistics/probe/i-probe-container.h  \
    $(NSFX_PATH)/statistics/probe/i-probe-enumerator.h \
    $(NSFX_PATH)/statistics/probe/probe.h              \
    $(NSFX_PATH)/statistics/probe/probe-container.h    \
    $(NSFX_PATH)/statistics/probe/probe-enumerator.h   \
    $(NSFX_PATH)/statistics/summary/i-summary.h        \
    $(NSFX_PATH)/statistics/summary/summary.h          \

HEADERS=                  \
    $(STATISTICS_HEADERS) \
    $(EVENT_HEADERS)      \
    $(COMPONENT_HEADERS)  \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
test-statistics : test-statistics.exe

SRC=statistics/test-statistics.cpp

test-statistics.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-probe : test-probe.exe

SRC=statistics/test-probe.cpp

test-probe.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-summary : test-summary.exe

SRC=statistics/test-summary.cpp

test-summary.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# simulation
simulation :            \
    test-event-handle   \
    test-list-scheduler \
    test-set-scheduler  \
    test-heap-scheduler \
    test-simulator      \

SIMULATION_HEADERS=                          \
    $(NSFX_PATH)/simulation.h                \
    $(NSFX_PATH)/simulation/config.h         \
    $(NSFX_PATH)/simulation/exception.h      \
    $(NSFX_PATH)/simulation/i-clock.h        \
    $(NSFX_PATH)/simulation/i-event-handle.h \
    $(NSFX_PATH)/simulation/event-handle.h   \
    $(NSFX_PATH)/simulation/i-scheduler.h    \
    $(NSFX_PATH)/simulation/list-scheduler.h \
    $(NSFX_PATH)/simulation/set-scheduler.h  \
    $(NSFX_PATH)/simulation/heap-scheduler.h \
    $(NSFX_PATH)/simulation/i-simulator.h    \
    $(NSFX_PATH)/simulation/simulator.h      \

HEADERS=                  \
    $(SIMULATION_HEADERS) \
    $(EVENT_HEADERS)      \
    $(COMPONENT_HEADERS)  \
    $(CHRONO_HEADERS)     \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
test-event-handle : test-event-handle.exe

SRC=simulation/test-event-handle.cpp

test-event-handle.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-list-scheduler : test-list-scheduler.exe

SRC=simulation/test-list-scheduler.cpp

test-list-scheduler.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-set-scheduler : test-set-scheduler.exe

SRC=simulation/test-set-scheduler.cpp

test-set-scheduler.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-heap-scheduler : test-heap-scheduler.exe

SRC=simulation/test-heap-scheduler.cpp

test-heap-scheduler.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-simulator : test-simulator.exe

SRC=simulation/test-simulator.cpp

test-simulator.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

################################################################################
# network
network :     \
    buffer    \
    packet    \
    address   \
    buffer-io \

buffer :                    \
    test-buffer             \
    test-const-buffer       \
    test-zc-buffer          \
    test-const-zc-buffer    \
    test-fixed-buffer       \
    test-const-fixed-buffer \
    test-buffer-iterator    \
    test-zc-buffer-iterator \

packet:                  \
    test-tag             \
    test-tag-index       \
    test-tag-index-array \
    test-tag-list        \
    test-packet          \

address:         \
    test-address \

buffer-io :            \
    test-arithmetic-io \
    test-duration-io   \
    test-time-point-io \
    test-address-io    \

NETWORK_HEADERS=                                                    \
    $(NSFX_PATH)/network.h                                          \
    $(NSFX_PATH)/network/config.h                                   \
    $(NSFX_PATH)/network/buffer.h                                   \
    $(NSFX_PATH)/network/buffer/storage/basic-buffer-storage.h      \
    $(NSFX_PATH)/network/buffer/iterator/basic-buffer-iterator.h    \
    $(NSFX_PATH)/network/buffer/iterator/buffer-iterator.h          \
    $(NSFX_PATH)/network/buffer/iterator/const-buffer-iterator.h    \
    $(NSFX_PATH)/network/buffer/iterator/zc-buffer-iterator.h       \
    $(NSFX_PATH)/network/buffer/iterator/const-zc-buffer-iterator.h \
    $(NSFX_PATH)/network/buffer/basic-buffer.h                      \
    $(NSFX_PATH)/network/buffer/buffer.h                            \
    $(NSFX_PATH)/network/buffer/const-buffer.h                      \
    $(NSFX_PATH)/network/buffer/zc-buffer.h                         \
    $(NSFX_PATH)/network/buffer/const-zc-buffer.h                   \
    $(NSFX_PATH)/network/buffer/fixed-buffer.h                      \
    $(NSFX_PATH)/network/buffer/const-fixed-buffer.h                \
    $(NSFX_PATH)/network/packet.h                                   \
    $(NSFX_PATH)/network/packet/exception.h                         \
    $(NSFX_PATH)/network/packet/tag/basic-tag.h                     \
    $(NSFX_PATH)/network/packet/tag/basic-tag-index.h               \
    $(NSFX_PATH)/network/packet/tag/basic-tag-index-array.h         \
    $(NSFX_PATH)/network/packet/tag/basic-tag-list.h                \
    $(NSFX_PATH)/network/packet/packet.h                            \
    $(NSFX_PATH)/network/address/address-little-endian.h            \
    $(NSFX_PATH)/network/address.h                                  \
    $(NSFX_PATH)/network/buffer/io/arithmetic-io.h                  \
    $(NSFX_PATH)/network/buffer/io/duration-io.h                    \
    $(NSFX_PATH)/network/buffer/io/time-point-io.h                  \
    $(NSFX_PATH)/network/buffer/io/address-io.h                     \

HEADERS=                  \
    $(NETWORK_HEADERS)    \
    $(SIMULATION_HEADERS) \
    $(EVENT_HEADERS)      \
    $(COMPONENT_HEADERS)  \
    $(CHRONO_HEADERS)     \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
test-buffer : test-buffer.exe

SRC=network/buffer/test-buffer.cpp

test-buffer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-const-buffer : test-const-buffer.exe

SRC=network/buffer/test-const-buffer.cpp

test-const-buffer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-zc-buffer : test-zc-buffer.exe

SRC=network/buffer/test-zc-buffer.cpp

test-zc-buffer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-const-zc-buffer : test-const-zc-buffer.exe

SRC=network/buffer/test-const-zc-buffer.cpp

test-const-zc-buffer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-fixed-buffer : test-fixed-buffer.exe

SRC=network/buffer/test-fixed-buffer.cpp

test-fixed-buffer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-const-fixed-buffer : test-const-fixed-buffer.exe

SRC=network/buffer/test-const-fixed-buffer.cpp

test-const-fixed-buffer.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-buffer-iterator : test-buffer-iterator.exe

SRC=network/buffer/test-buffer-iterator.cpp

test-buffer-iterator.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-zc-buffer-iterator : test-zc-buffer-iterator.exe

SRC=network/buffer/test-zc-buffer-iterator.cpp

test-zc-buffer-iterator.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-tag : test-tag.exe

SRC=network/packet/test-tag.cpp

test-tag.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-tag-index : test-tag-index.exe

SRC=network/packet/test-tag-index.cpp

test-tag-index.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-tag-index-array : test-tag-index-array.exe

SRC=network/packet/test-tag-index-array.cpp

test-tag-index-array.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-tag-list : test-tag-list.exe

SRC=network/packet/test-tag-list.cpp

test-tag-list.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-packet : test-packet.exe

SRC=network/packet/test-packet.cpp

test-packet.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-address : test-address.exe

SRC=network/address/test-address.cpp

test-address.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-arithmetic-io : test-arithmetic-io.exe

SRC=network/buffer/io/test-arithmetic-io.cpp

test-arithmetic-io.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-duration-io : test-duration-io.exe

SRC=network/buffer/io/test-duration-io.cpp

test-duration-io.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-time-point-io : test-time-point-io.exe

SRC=network/buffer/io/test-time-point-io.cpp

test-time-point-io.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

########################################
test-address-io : test-address-io.exe

SRC=network/buffer/io/test-address-io.cpp

test-address-io.exe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) /Fo"./" /Fd"./" /Fe"$@" $(SRC) /link $(LDFLAGS) $(LIBS) /PDB:"./"

