##
# @file
#
# @brief Makefile for tests.
#
# @version 1.0
# @author  Wei Tang <gauchyler@uestc.edu.cn>
# @date    2018-09-30
#
# @copyright Copyright (c) 2018.
#   National Key Laboratory of Science and Technology on Communications,
#   University of Electronic Science and Technology of China.
#   All rights reserved.
#

SHELL=/bin/sh
NSFX_PATH=..
CC=g++-5
LD=ld
LIBS=
AR=

CFLAGS=
CPPFLAGS=-I$(NSFX_PATH)/.. -std=c++11
LDFLAGS=
ARFLAGS=

ifeq ($(BUILD_TYPE), Release)
CPPFLAGS+=-O3 -DBOOST_DISABLE_ASSERTS
else
CPPFLAGS+=-g
endif

.PHONY: all clean run                                              \
        test utility chrono component event log random statistics  \
        simulation network                                         \

clean :
	for f in $$(find . -type f ! -name "*.*"); do rm $$f; done
	for f in $$(find . -type f -name "*.log"); do rm $$f; done
	for f in $$(find . -type f -name "*.txt"); do rm $$f; done

all : test utility chrono                    \
      component event log random statistics  \
      simulation network                     \

run :
	for f in $$(find . -type f ! -name "*.*"); do  \
		echo "====== $${f##*/} ======";            \
		$$f;                                       \
	done

################################################################################
EXCEPTION_HEADERS=                      \
    $(NSFX_PATH)/config.h               \
    $(NSFX_PATH)/exception/exception.h  \

################################################################################
# test
test :          \
    test-case   \
    test-suite  \

TEST_HEADERS=                            \
    $(NSFX_PATH)/test.h                  \
    $(NSFX_PATH)/test/config.h           \
    $(NSFX_PATH)/test/visitor-concept.h  \
    $(NSFX_PATH)/test/tool-type.h        \
    $(NSFX_PATH)/test/tool-level.h       \
    $(NSFX_PATH)/test/result.h           \
    $(NSFX_PATH)/test/case.h             \
    $(NSFX_PATH)/test/suite.h            \
    $(NSFX_PATH)/test/logger.h           \
    $(NSFX_PATH)/test/runner.h           \
    $(NSFX_PATH)/test/builder.h          \
    $(NSFX_PATH)/test/tool-iterate.h     \
    $(NSFX_PATH)/test/tool.h             \

HEADERS=                  \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
SRC=test/test-case.cpp

test-case : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=test/test-suite.cpp

test-suite : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# utility
utility :                         \
    test-nop                      \
    test-circular-sequence-number \
    test-lollipop-sequence-number \
    test-bi-array                 \
    test-bi-matrix                \
    test-bi-matrix                \
    test-bi-vector                \
    test-lexical-compare          \

UTILITY_HEADERS=                                    \
    $(NSFX_PATH)/utility.h                          \
    $(NSFX_PATH)/utility/config.h                   \
    $(NSFX_PATH)/utility/nop.h                      \
    $(NSFX_PATH)/utility/ratio.h                    \
    $(NSFX_PATH)/utility/endian.h                   \
    $(NSFX_PATH)/utility/type-identity.h            \
    $(NSFX_PATH)/utility/rounding.h                 \
    $(NSFX_PATH)/utility/circular-sequence-number.h \
    $(NSFX_PATH)/utility/lollipop-sequence-number.h \
    $(NSFX_PATH)/utility/bi-array.h                 \
    $(NSFX_PATH)/utility/bi-matrix.h                \
    $(NSFX_PATH)/utility/bi-vector.h                \
    $(NSFX_PATH)/utility/lexical-compare.h          \

HEADERS=                  \
    $(UTILITY_HEADERS)    \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
SRC=utility/test-nop.cpp

test-nop : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=utility/test-circular-sequence-number.cpp

test-circular-sequence-number : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=utility/test-lollipop-sequence-number.cpp

test-lollipop-sequence-number : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=utility/test-bi-array.cpp

test-bi-array : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=utility/test-bi-matrix.cpp

test-bi-matrix : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=utility/test-bi-vector.cpp

test-bi-vector : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=utility/test-lexical-compare.cpp

test-lexical-compare : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# chrono
chrono :                     \
    test-duration            \
    test-virtual-time-point  \

CHRONO_HEADERS=                               \
    $(NSFX_PATH)/config.h                     \
    $(NSFX_PATH)/chrono/config.h              \
    $(NSFX_PATH)/chrono/duration.h            \
    $(NSFX_PATH)/chrono/time-point.h          \
    $(NSFX_PATH)/chrono/virtual-time-point.h  \

HEADERS=                \
    $(CHRONO_HEADERS)   \
    $(TEST_HEADERS)     \
    $(UTILITY_HEADERS)  \

########################################
SRC=chrono/test-duration.cpp

test-duration : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=chrono/test-virtual-time-point.cpp

test-virtual-time-point : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# component
component :              \
    test-uid             \
    test-ptr             \
    test-object          \
    test-class-factory   \
    test-class-registry  \

COMPONENT_HEADERS=                             \
    $(NSFX_PATH)/component.h                   \
    $(NSFX_PATH)/component/config.h            \
    $(NSFX_PATH)/component/exception.h         \
    $(NSFX_PATH)/component/uid.h               \
    $(NSFX_PATH)/component/i-object.h          \
    $(NSFX_PATH)/component/object.h            \
    $(NSFX_PATH)/component/ptr.h               \
    $(NSFX_PATH)/component/i-user.h            \
    $(NSFX_PATH)/component/i-class-factory.h   \
    $(NSFX_PATH)/component/class-factory.h     \
    $(NSFX_PATH)/component/i-class-registry.h  \
    $(NSFX_PATH)/component/class-registry.h    \

HEADERS=                  \
    $(COMPONENT_HEADERS)  \
    $(CHRONO_HEADERS)     \
    $(TEST_HEADERS)       \
    $(UTILITY_HEADERS)    \

########################################
SRC=component/test-uid.cpp

test-uid : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=component/test-ptr.cpp

test-ptr : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=component/test-object.cpp

test-object : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=component/test-class-factory.cpp

test-class-factory : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=component/test-class-registry.cpp

test-class-registry : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# event
event :              \
    test-event-sink  \
    test-event       \
    test-portainer   \

EVENT_HEADERS=                         \
    $(NSFX_PATH)/event.h               \
    $(NSFX_PATH)/event/config.h        \
    $(NSFX_PATH)/event/exception.h     \
    $(NSFX_PATH)/event/i-event-sink.h  \
    $(NSFX_PATH)/event/event-sink.h    \
    $(NSFX_PATH)/event/i-event.h       \
    $(NSFX_PATH)/event/event.h         \
    $(NSFX_PATH)/event/portainer.h     \

HEADERS=                  \
    $(EVENT_HEADERS)      \
    $(COMPONENT_HEADERS)  \
    $(CHRONO_HEADERS)     \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
SRC=event/test-event.cpp

test-event : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=event/test-event-sink.cpp

test-event-sink : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=event/test-portainer.cpp

test-portainer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# log
log :                     \
	test-log-value        \
	test-log-record       \
    test-log-filter       \
    test-logger           \
    test-log-formatter    \
    test-log-stream-sink  \

LOG_HEADERS=                                 \
    $(NSFX_PATH)/log.h                       \
    $(NSFX_PATH)/log/config.h                \
    $(NSFX_PATH)/log/exception.h             \
    $(NSFX_PATH)/log/log-value.h             \
    $(NSFX_PATH)/log/make-log-value.h        \
    $(NSFX_PATH)/log/log-value-traits.h      \
    $(NSFX_PATH)/log/std-log-value-traits.h  \
    $(NSFX_PATH)/log/log-record.h            \
    $(NSFX_PATH)/log/i-log.h                 \
    $(NSFX_PATH)/log/log-severity.h          \
    $(NSFX_PATH)/log/log-tool.h              \
    $(NSFX_PATH)/log/i-log-filter.h          \
    $(NSFX_PATH)/log/create-log-filter.h     \
    $(NSFX_PATH)/log/logger.h                \
    $(NSFX_PATH)/log/i-log-formatter.h       \
    $(NSFX_PATH)/log/create-log-formatter.h  \
    $(NSFX_PATH)/log/i-log-stream-sink.h     \
    $(NSFX_PATH)/log/log-stream-sink.h       \

HEADERS=                  \
    $(LOG_HEADERS)        \
    $(EVENT_HEADERS)      \
    $(COMPONENT_HEADERS)  \
    $(CHRONO_HEADERS)     \
    $(TEST_HEADERS)       \
    $(EXCEPTION_HEADERS)  \

########################################
SRC=log/test-log-value.cpp

test-log-value : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=log/test-log-record.cpp

test-log-record : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=log/test-log-filter.cpp

test-log-filter : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=log/test-logger.cpp

test-logger : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=log/test-log-formatter.cpp

test-log-formatter : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=log/test-log-stream-sink.cpp

test-log-stream-sink : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# random
random :                          \
    test-rot                      \
    test-splitmix-engine          \
    test-xoshiro-engine           \
    test-xoroshiro-engine         \
    test-pseudo-random-generator  \

RANDOM_HEADERS=                                                             \
    $(NSFX_PATH)/random.h                                                   \
    $(NSFX_PATH)/random/config.h                                            \
    $(NSFX_PATH)/random/detail/rot.h                                        \
    $(NSFX_PATH)/random/detail/is-power-2.h                                 \
    $(NSFX_PATH)/random/distribution/i-uniform-uint32-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-uniform-int32-distribution.h         \
    $(NSFX_PATH)/random/distribution/i-uniform-uint64-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-uniform-int64-distribution.h         \
    $(NSFX_PATH)/random/distribution/i-uniform-double-distribution.h        \
    $(NSFX_PATH)/random/distribution/i-uniform-float-distribution.h         \
    $(NSFX_PATH)/random/distribution/i-bernoulli-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-binomial-distribution.h              \
    $(NSFX_PATH)/random/distribution/i-geometric-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-negative-binomial-distribution.h     \
    $(NSFX_PATH)/random/distribution/i-poisson-distribution.h               \
    $(NSFX_PATH)/random/distribution/i-exponential-distribution.h           \
    $(NSFX_PATH)/random/distribution/i-gamma-distribution.h                 \
    $(NSFX_PATH)/random/distribution/i-weibull-distribution.h               \
    $(NSFX_PATH)/random/distribution/i-extreme-value-distribution.h         \
    $(NSFX_PATH)/random/distribution/i-beta-distribution.h                  \
    $(NSFX_PATH)/random/distribution/i-laplace-distribution.h               \
    $(NSFX_PATH)/random/distribution/i-normal-distribution.h                \
    $(NSFX_PATH)/random/distribution/i-lognormal-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-chi-squared-distribution.h           \
    $(NSFX_PATH)/random/distribution/i-cauchy-distribution.h                \
    $(NSFX_PATH)/random/distribution/i-fisher-f-distribution.h              \
    $(NSFX_PATH)/random/distribution/i-student-t-distribution.h             \
    $(NSFX_PATH)/random/distribution/i-discrete-distribution.h              \
    $(NSFX_PATH)/random/distribution/i-piecewise-constant-distribution.h    \
    $(NSFX_PATH)/random/distribution/i-piecewise-linear-distribution.h      \
    $(NSFX_PATH)/random/distribution/i-triangle-distribution.h              \
    $(NSFX_PATH)/random/distribution/std-uniform-uint32-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-uniform-int32-distribution.h       \
    $(NSFX_PATH)/random/distribution/std-uniform-uint64-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-uniform-int64-distribution.h       \
    $(NSFX_PATH)/random/distribution/std-uniform-double-distribution.h      \
    $(NSFX_PATH)/random/distribution/std-uniform-float-distribution.h       \
    $(NSFX_PATH)/random/distribution/std-bernoulli-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-binomial-distribution.h            \
    $(NSFX_PATH)/random/distribution/std-geometric-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-negative-binomial-distribution.h   \
    $(NSFX_PATH)/random/distribution/std-poisson-distribution.h             \
    $(NSFX_PATH)/random/distribution/std-exponential-distribution.h         \
    $(NSFX_PATH)/random/distribution/std-gamma-distribution.h               \
    $(NSFX_PATH)/random/distribution/std-weibull-distribution.h             \
    $(NSFX_PATH)/random/distribution/std-extreme-value-distribution.h       \
    $(NSFX_PATH)/random/distribution/std-beta-distribution.h                \
    $(NSFX_PATH)/random/distribution/std-laplace-distribution.h             \
    $(NSFX_PATH)/random/distribution/std-normal-distribution.h              \
    $(NSFX_PATH)/random/distribution/std-lognormal-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-chi-squared-distribution.h         \
    $(NSFX_PATH)/random/distribution/std-cauchy-distribution.h              \
    $(NSFX_PATH)/random/distribution/std-fisher-f-distribution.h            \
    $(NSFX_PATH)/random/distribution/std-student-t-distribution.h           \
    $(NSFX_PATH)/random/distribution/std-discrete-distribution.h            \
    $(NSFX_PATH)/random/distribution/std-piecewise-constant-distribution.h  \
    $(NSFX_PATH)/random/distribution/std-piecewise-linear-distribution.h    \
    $(NSFX_PATH)/random/distribution/std-triangle-distribution.h            \
    $(NSFX_PATH)/random/engine/splitmix-engine.h                            \
    $(NSFX_PATH)/random/engine/xoroshiro-engine.h                           \
    $(NSFX_PATH)/random/engine/xoshiro-engine.h                             \
    $(NSFX_PATH)/random/i-random.h                                          \
    $(NSFX_PATH)/random/i-random-uint32-generator.h                         \
    $(NSFX_PATH)/random/i-random-uint64-generator.h                         \
    $(NSFX_PATH)/random/i-random-double-generator.h                         \
    $(NSFX_PATH)/random/i-pseudo-random-engine.h                            \
    $(NSFX_PATH)/random/pseudo-random-generator.h                           \

HEADERS=                  \
    $(RANDOM_HEADERS)     \
    $(COMPONENT_HEADERS)  \
    $(TEST_HEADERS)       \
	$(EXCEPTION_HEADERS)  \

########################################
SRC=random/test-rot.cpp

test-rot : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=random/test-splitmix-engine.cpp

test-splitmix-engine : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=random/test-xoshiro-engine.cpp

test-xoshiro-engine : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=random/test-xoroshiro-engine.cpp

test-xoroshiro-engine : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=random/test-pseudo-random-generator.cpp

test-pseudo-random-generator : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# statistics
statistics :      \
    test-probe    \
    test-summary  \

STATISTICS_HEADERS=                                     \
    $(NSFX_PATH)/statistics.h                           \
    $(NSFX_PATH)/statistics/config.h                    \
    $(NSFX_PATH)/statistics/exception.h                 \
    $(NSFX_PATH)/statistics/probe/i-probe-event.h       \
    $(NSFX_PATH)/statistics/probe/i-probe-container.h   \
    $(NSFX_PATH)/statistics/probe/i-probe-enumerator.h  \
    $(NSFX_PATH)/statistics/probe/probe.h               \
    $(NSFX_PATH)/statistics/probe/probe-container.h     \
    $(NSFX_PATH)/statistics/probe/probe-enumerator.h    \
    $(NSFX_PATH)/statistics/summary/i-summary.h         \
    $(NSFX_PATH)/statistics/summary/summary.h           \

HEADERS=                   \
    $(STATISTICS_HEADERS)  \
    $(EVENT_HEADERS)       \
    $(COMPONENT_HEADERS)   \
    $(TEST_HEADERS)        \
    $(EXCEPTION_HEADERS)   \

########################################
SRC=statistics/test-probe.cpp

test-probe : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=statistics/test-summary.cpp

test-summary : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# simulation
simulation :             \
    test-event-handle    \
    test-list-scheduler  \
    test-set-scheduler   \
    test-heap-scheduler  \
    test-simulator       \

SIMULATION_HEADERS=                           \
    $(NSFX_PATH)/simulation.h                 \
    $(NSFX_PATH)/simulation/config.h          \
    $(NSFX_PATH)/simulation/exception.h       \
    $(NSFX_PATH)/simulation/i-clock.h         \
    $(NSFX_PATH)/simulation/i-event-handle.h  \
    $(NSFX_PATH)/simulation/event-handle.h    \
    $(NSFX_PATH)/simulation/i-scheduler.h     \
    $(NSFX_PATH)/simulation/list-scheduler.h  \
    $(NSFX_PATH)/simulation/set-scheduler.h   \
    $(NSFX_PATH)/simulation/heap-scheduler.h  \
    $(NSFX_PATH)/simulation/i-simulator.h     \
    $(NSFX_PATH)/simulation/simulator.h       \

HEADERS=                   \
    $(SIMULATION_HEADERS)  \
    $(EVENT_HEADERS)       \
    $(COMPONENT_HEADERS)   \
    $(CHRONO_HEADERS)      \
    $(TEST_HEADERS)        \
    $(EXCEPTION_HEADERS)   \

########################################
SRC=simulation/test-event-handle.cpp

test-event-handle : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=simulation/test-list-scheduler.cpp

test-list-scheduler : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=simulation/test-set-scheduler.cpp

test-set-scheduler : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=simulation/test-heap-scheduler.cpp

test-heap-scheduler : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=simulation/test-simulator.cpp

test-simulator : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

################################################################################
# network
network :      \
    buffer     \
    packet     \
    address    \
    buffer-io  \

buffer :                     \
    test-buffer              \
    test-const-buffer        \
    test-zc-buffer           \
    test-const-zc-buffer     \
    test-fixed-buffer        \
    test-const-fixed-buffer  \
    test-buffer-iterator     \
    test-zc-buffer-iterator  \

packet:                   \
    test-tag              \
    test-tag-index        \
    test-tag-index-array  \
    test-tag-list         \
    test-packet           \

address:          \
    test-address  \

buffer-io :             \
    test-arithmetic-io  \
    test-duration-io    \
    test-time-point-io  \
    test-address-io     \

NETWORK_HEADERS=                                                     \
    $(NSFX_PATH)/network.h                                           \
    $(NSFX_PATH)/network/config.h                                    \
    $(NSFX_PATH)/network/buffer.h                                    \
    $(NSFX_PATH)/network/buffer/storage/basic-buffer-storage.h       \
    $(NSFX_PATH)/network/buffer/iterator/basic-buffer-iterator.h     \
    $(NSFX_PATH)/network/buffer/iterator/buffer-iterator.h           \
    $(NSFX_PATH)/network/buffer/iterator/const-buffer-iterator.h     \
    $(NSFX_PATH)/network/buffer/iterator/zc-buffer-iterator.h        \
    $(NSFX_PATH)/network/buffer/iterator/const-zc-buffer-iterator.h  \
    $(NSFX_PATH)/network/buffer/basic-buffer.h                       \
    $(NSFX_PATH)/network/buffer/buffer.h                             \
    $(NSFX_PATH)/network/buffer/const-buffer.h                       \
    $(NSFX_PATH)/network/buffer/zc-buffer.h                          \
    $(NSFX_PATH)/network/buffer/const-zc-buffer.h                    \
    $(NSFX_PATH)/network/buffer/fixed-buffer.h                       \
    $(NSFX_PATH)/network/buffer/const-fixed-buffer.h                 \
    $(NSFX_PATH)/network/packet.h                                    \
    $(NSFX_PATH)/network/packet/exception.h                          \
    $(NSFX_PATH)/network/packet/tag/basic-tag.h                      \
    $(NSFX_PATH)/network/packet/tag/basic-tag-index.h                \
    $(NSFX_PATH)/network/packet/tag/basic-tag-index-array.h          \
    $(NSFX_PATH)/network/packet/tag/basic-tag-list.h                 \
    $(NSFX_PATH)/network/packet/packet.h                             \
    $(NSFX_PATH)/network/address/address-little-endian.h             \
    $(NSFX_PATH)/network/address.h                                   \
    $(NSFX_PATH)/network/buffer/io/arithmetic-io.h                   \
    $(NSFX_PATH)/network/buffer/io/duration-io.h                     \
    $(NSFX_PATH)/network/buffer/io/time-point-io.h                   \
    $(NSFX_PATH)/network/buffer/io/address-io.h                      \

HEADERS=                   \
    $(NETWORK_HEADERS)     \
    $(SIMULATION_HEADERS)  \
    $(EVENT_HEADERS)       \
    $(COMPONENT_HEADERS)   \
    $(CHRONO_HEADERS)      \
    $(TEST_HEADERS)        \
    $(EXCEPTION_HEADERS)   \

########################################
SRC=network/buffer/test-buffer.cpp

test-buffer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-const-buffer.cpp

test-const-buffer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-zc-buffer.cpp

test-zc-buffer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-const-zc-buffer.cpp

test-const-zc-buffer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-fixed-buffer.cpp

test-fixed-buffer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-const-fixed-buffer.cpp

test-const-fixed-buffer : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-buffer-iterator.cpp

test-buffer-iterator : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/test-zc-buffer-iterator.cpp

test-zc-buffer-iterator : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/packet/test-tag.cpp

test-tag : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/packet/test-tag-index.cpp

test-tag-index : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/packet/test-tag-index-array.cpp

test-tag-index-array : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/packet/test-tag-list.cpp

test-tag-list : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/packet/test-packet.cpp

test-packet : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/address/test-address.cpp

test-address : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/io/test-arithmetic-io.cpp

test-arithmetic-io : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/io/test-duration-io.cpp

test-duration-io : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/io/test-time-point-io.cpp

test-time-point-io : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

########################################
SRC=network/buffer/io/test-address-io.cpp

test-address-io : $(SRC) $(HEADERS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(LIBS) $< -o $@

